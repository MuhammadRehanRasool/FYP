"""
Django settings for project project.

Generated by 'django-admin startproject' using Django 4.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""


import os
import warnings
from pathlib import Path
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-=pu)$e*b$yef1^_4$v$(a9$3%s&6$7w!9pci9z#==a_@ok5nrj'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]

CSRF_TRUSTED_ORIGINS = ['https://rehansathio.pythonanywhere.com']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
    'rest_framework',
    'api',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    "corsheaders.middleware.CorsMiddleware",
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        # Look, we have added the root folder of frontend here
        'DIRS': [os.path.join(BASE_DIR, 'client')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/
# The absolute path to the directory where collectstatic will collect static files for deployment.
STATIC_ROOT = BASE_DIR / 'staticfiles'

# The URL to use when referring to static files (where they will be served from)
STATIC_URL = '/assets/'

STATICFILES_DIRS = (
    # update the STATICFILES_DIRS
    os.path.join(BASE_DIR, 'client', "dist", "assets"),
)

STATICFILES_STORAGE = 'whitenoise.storage.CompressedStaticFilesStorage'
WHITENOISE_ROOT = os.path.join(BASE_DIR, 'staticfiles', 'root')
warnings.filterwarnings(
    "ignore", message="No directory at", module="whitenoise.base")


AUTH_USER_MODEL = 'api.CustomUser'

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

CORS_ALLOW_ALL_ORIGINS = True

os.environ["GOOGLE_APPLICATION_CREDENTIALS"] = {
  "type": "service_account",
  "project_id": "migrane-rkss",
  "private_key_id": "55be99e81de2033f81c74e63d1ac9dec40329c11",
  "private_key": "-----BEGIN PRIVATE KEY-----\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQDW7oaf+xX7Dhq0\nKfQBXncKWR/1NE0if7oNMQOgkYaumc+0QcMWDDYnRJsZaiGCrA2wZx+CI4dRg9uG\nFQZDJaJkg78IKGWZLG/nQVvMHhAXn3rb6a2gWhhpk4MQDeOQmCGrdN+54F1ts8u+\nzKwHU/gx3+6/+XRgDHebmeyNuHpzeEOfvhP55SADPvsw3DGGlIKHNnz+q0YEijo/\nd5KU2Qm5UXU8bynXYaUfKOYyXH/Yjc7y4nSu3j0rFhone9KFmz6+7uFZEIXgz2+Z\nXZ/qNRPHHmxRWHpjLqWQUmYPSFw3mHNKMlnf086eockDuMCGu514DJ2QGkfp+pNO\nW8ezBCatAgMBAAECggEADyhTh90aFTz5kXgd9FTC+hCuqh5t9tS20cRW+FAbBUg6\nois7GgcdcJKBilQg7d66uRSPX8r9TuMzgZa3p4JJcWOV1CTz2U64IOvL5gQUEskV\nTdoCe9BZcA9OSxJiWJRUrOCkAISmrMcPw4fFSrUCHWj9+j2aQUXPz5eWMP5wFaF7\nTuiq6wjGmIqRLPgxBbEPor8thOjLEngf/qdP97mKXAErhrVknmiTQpczBhY/5XSP\nuRBj10UT4nPk+4yXYLgyqJ6x7jD7ql8XEnWRvRT4sR+hMhjnuaRHeL+J2ixg0W+b\n2mr6NZFGNCRyAm23fNOA49O8ESwG6HMqMaG5UCAZ7wKBgQD5b/o6zVFiv8vgWOYl\np8f4JUteDBZuj9BF60TQXO6h+QMX9ujti1tVMXdTW4KuWiWu0dsz63nwL5QlQrps\ndGtMkaxpt5AAUAq0rjjtkbdW5a6Xs2m98j+ZdkUcLJ6BGlgLpKO0tmL870ZrPufW\nBF/bcypCcJPo8DLmdxwy+OKC7wKBgQDcliTrG+wBD5PpNnjIsuX7p6xQLLH1fXeL\nbxKgTLbAB6xunXpPB4/fEqi0eO6zdiDd1u4AMF/s9qVHtCNXGEXeUhLsDAU5Uix1\nfD8F90MaMnG+A8dTxXLGcGJ/3Bipol2DrnKE0j/p7oBsKvNat13QVAA50iZsUQqw\nL0aU37fAIwKBgQCHBRErUUZzsKRYXWa/DVIWRYHFd7+Qu3Ie1tpZ+2QE8zi0eSfe\npaebtvoDei6D2DI7rkb8lMNduzNy8+rbmC0YtmXgl8dwE+OnqAMSveTDOfLHFQvx\nELdSh42jUZe/BJaSPt2KjYuJpK+2j8eItrd4n59JdYzq81JqJCF0ifp6qwKBgFnd\nRR8PGf94pC5vRZel4jG6pmVnP/yd57TDRFhPyGfE+Id72lcV4pPjWx1i4wPzjQIz\nTHSBQKMd/EmQ5pDVz6j50MGfSAWJJ5mZS2eXyxuCD3p0uaC0IMUdBdPHC7kX73b0\n+6yGpwkbY/AtM0TyzOJRRmJH7eVUwsDyEZQW7Bn3AoGAQCY16gzpx40L8Bb1XQMd\nyZCqERg57gsDOuZxUDvl0+A2pVV/HiUIpceFygAV6jdrinwkXEvl3Y1s9EQ/xAp6\ndQR/TPA3WMAl03gt+CvFJDXeCuO1+ICLyMQQRz9zjUfKVSJbDlO20/NUK+WxUUmG\n6H+m3OfZk3ftxXE+mcr+/vA=\n-----END PRIVATE KEY-----\n",
  "client_email": "dialogflow@migrane-rkss.iam.gserviceaccount.com",
  "client_id": "112434905697604904324",
  "auth_uri": "https://accounts.google.com/o/oauth2/auth",
  "token_uri": "https://oauth2.googleapis.com/token",
  "auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs",
  "client_x509_cert_url": "https://www.googleapis.com/robot/v1/metadata/x509/dialogflow%40migrane-rkss.iam.gserviceaccount.com",
  "universe_domain": "googleapis.com"
}

